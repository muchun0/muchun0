{'ZADD': [{'# 添加单个元素\n\nredis> ZADD page_rank 10 google.com\n(integer) 1\n\n\n# 添加多个元素\n\nredis> ZADD page_rank 9 baidu.com 8 bing.com\n(integer) 2\n\nredis> ZRANGE page_rank 0 -1 WITHSCORES\n1) "bing.com"\n2) "8"\n3) "baidu.com"\n4) "9"\n5) "google.com"\n6) "10"\n\n\n# 添加已存在元素，且 score 值不变\n\nredis> ZADD page_rank 10 google.com\n(integer) 0\n\nredis> ZRANGE page_rank 0 -1 WITHSCORES  # 没有改变\n1) "bing.com"\n2) "8"\n3) "baidu.com"\n4) "9"\n5) "google.com"\n6) "10"\n\n\n# 添加已存在元素，但是改变 score 值\n\nredis> ZADD page_rank 6 bing.com\n(integer) 0\n\nredis> ZRANGE page_rank 0 -1 WITHSCORES  # bing.com 元素的 score 值被改变\n1) "bing.com"\n2) "6"\n3) "baidu.com"\n4) "9"\n5) "google.com"\n6) "10"'}, {'http://doc.redisfans.com/sorted_set/zadd.html'}], 'ZCARD': [{'redis > ZADD salary 2000 tom    # 添加一个成员\n(integer) 1\n\nredis > ZCARD salary\n(integer) 1\n\nredis > ZADD salary 5000 jack   # 再添加一个成员\n(integer) 1\n\nredis > ZCARD salary\n(integer) 2\n\nredis > EXISTS non_exists_key   # 对不存在的 key 进行 ZCARD 操作\n(integer) 0\n\nredis > ZCARD non_exists_key\n(integer) 0'}, {'http://doc.redisfans.com/sorted_set/zcard.html'}], 'ZCOUNT': [{'redis> ZRANGE salary 0 -1 WITHSCORES    # 测试数据\n1) "jack"\n2) "2000"\n3) "peter"\n4) "3500"\n5) "tom"\n6) "5000"\n\nredis> ZCOUNT salary 2000 5000          # 计算薪水在 2000-5000 之间的人数\n(integer) 3\n\nredis> ZCOUNT salary 3000 5000          # 计算薪水在 3000-5000 之间的人数\n(integer) 2'}, {'http://doc.redisfans.com/sorted_set/zcount.html'}], 'ZINCRBY': [{'redis> ZSCORE salary tom\n"2000"\n\nredis> ZINCRBY salary 2000 tom   # tom 加薪啦！\n"4000"'}, {'http://doc.redisfans.com/sorted_set/zincrby.html'}], 'ZRANGE': [{'redis > ZRANGE salary 0 -1 WITHSCORES             # 显示整个有序集成员\n1) "jack"\n2) "3500"\n3) "tom"\n4) "5000"\n5) "boss"\n6) "10086"\n\nredis > ZRANGE salary 1 2 WITHSCORES              # 显示有序集下标区间 1 至 2 的成员\n1) "tom"\n2) "5000"\n3) "boss"\n4) "10086"\n\nredis > ZRANGE salary 0 200000 WITHSCORES         # 测试 end 下标超出最大下标时的情况\n1) "jack"\n2) "3500"\n3) "tom"\n4) "5000"\n5) "boss"\n6) "10086"\n\nredis > ZRANGE salary 200000 3000000 WITHSCORES   # 测试当给定区间不存在于有序集时的情况\n(empty list or set)'}, {'http://doc.redisfans.com/sorted_set/zrange.html'}], 'ZRANGEBYSCORE': [{'ZRANGEBYSCORE zset (1 5'}, {'http://doc.redisfans.com/sorted_set/zrangebyscore.html'}], 'ZRANK': [{'redis> ZRANGE salary 0 -1 WITHSCORES        # 显示所有成员及其 score 值\n1) "peter"\n2) "3500"\n3) "tom"\n4) "4000"\n5) "jack"\n6) "5000"\n\nredis> ZRANK salary tom                     # 显示 tom 的薪水排名，第二\n(integer) 1'}, {'http://doc.redisfans.com/sorted_set/zrank.html'}], 'ZREM': [{'# 测试数据\n\nredis> ZRANGE page_rank 0 -1 WITHSCORES\n1) "bing.com"\n2) "8"\n3) "baidu.com"\n4) "9"\n5) "google.com"\n6) "10"\n\n\n# 移除单个元素\n\nredis> ZREM page_rank google.com\n(integer) 1\n\nredis> ZRANGE page_rank 0 -1 WITHSCORES\n1) "bing.com"\n2) "8"\n3) "baidu.com"\n4) "9"\n\n\n# 移除多个元素\n\nredis> ZREM page_rank baidu.com bing.com\n(integer) 2\n\nredis> ZRANGE page_rank 0 -1 WITHSCORES\n(empty list or set)\n\n\n# 移除不存在元素\n\nredis> ZREM page_rank non-exists-element\n(integer) 0'}, {'http://doc.redisfans.com/sorted_set/zrem.html'}], 'ZREMRANGEBYRANK': [{'redis> ZADD salary 2000 jack\n(integer) 1\nredis> ZADD salary 5000 tom\n(integer) 1\nredis> ZADD salary 3500 peter\n(integer) 1\n\nredis> ZREMRANGEBYRANK salary 0 1       # 移除下标 0 至 1 区间内的成员\n(integer) 2\n\nredis> ZRANGE salary 0 -1 WITHSCORES    # 有序集只剩下一个成员\n1) "tom"\n2) "5000"'}, {'http://doc.redisfans.com/sorted_set/zremrangebyrank.html'}], 'ZREMRANGEBYSCORE': [{'redis> ZRANGE salary 0 -1 WITHSCORES          # 显示有序集内所有成员及其 score 值\n1) "tom"\n2) "2000"\n3) "peter"\n4) "3500"\n5) "jack"\n6) "5000"\n\nredis> ZREMRANGEBYSCORE salary 1500 3500      # 移除所有薪水在 1500 到 3500 内的员工\n(integer) 2\n\nredis> ZRANGE salary 0 -1 WITHSCORES          # 剩下的有序集成员\n1) "jack"\n2) "5000"'}, {'http://doc.redisfans.com/sorted_set/zremrangebyscore.html'}], 'ZREVRANGE': [{'redis> ZRANGE salary 0 -1 WITHSCORES        # 递增排列\n1) "peter"\n2) "3500"\n3) "tom"\n4) "4000"\n5) "jack"\n6) "5000"\n\nredis> ZREVRANGE salary 0 -1 WITHSCORES     # 递减排列\n1) "jack"\n2) "5000"\n3) "tom"\n4) "4000"\n5) "peter"\n6) "3500"'}, {'http://doc.redisfans.com/sorted_set/zrevrange.html'}], 'ZREVRANGEBYSCORE': [{'redis > ZADD salary 10086 jack\n(integer) 1\nredis > ZADD salary 5000 tom\n(integer) 1\nredis > ZADD salary 7500 peter\n(integer) 1\nredis > ZADD salary 3500 joe\n(integer) 1\n\nredis > ZREVRANGEBYSCORE salary +inf -inf   # 逆序排列所有成员\n1) "jack"\n2) "peter"\n3) "tom"\n4) "joe"\n\nredis > ZREVRANGEBYSCORE salary 10000 2000  # 逆序排列薪水介于 10000 和 2000 之间的成员\n1) "peter"\n2) "tom"\n3) "joe"'}, {'http://doc.redisfans.com/sorted_set/zrevrangebyscore.html'}], 'ZREVRANK': [{'redis 127.0.0.1:6379> ZRANGE salary 0 -1 WITHSCORES     # 测试数据\n1) "jack"\n2) "2000"\n3) "peter"\n4) "3500"\n5) "tom"\n6) "5000"\n\nredis> ZREVRANK salary peter     # peter 的工资排第二\n(integer) 1\n\nredis> ZREVRANK salary tom       # tom 的工资最高\n(integer) 0'}, {'http://doc.redisfans.com/sorted_set/zrevrank.html'}], 'ZSCORE': [{'redis> ZRANGE salary 0 -1 WITHSCORES    # 测试数据\n1) "tom"\n2) "2000"\n3) "peter"\n4) "3500"\n5) "jack"\n6) "5000"\n\nredis> ZSCORE salary peter              # 注意返回值是字符串\n"3500"'}, {'http://doc.redisfans.com/sorted_set/zscore.html'}], 'ZUNIONSTORE': [{'redis> ZRANGE programmer 0 -1 WITHSCORES\n1) "peter"\n2) "2000"\n3) "jack"\n4) "3500"\n5) "tom"\n6) "5000"\n\nredis> ZRANGE manager 0 -1 WITHSCORES\n1) "herry"\n2) "2000"\n3) "mary"\n4) "3500"\n5) "bob"\n6) "4000"\n\nredis> ZUNIONSTORE salary 2 programmer manager WEIGHTS 1 3   # 公司决定加薪。。。除了程序员。。。\n(integer) 6\n\nredis> ZRANGE salary 0 -1 WITHSCORES\n1) "peter"\n2) "2000"\n3) "jack"\n4) "3500"\n5) "tom"\n6) "5000"\n7) "herry"\n8) "6000"\n9) "mary"\n10) "10500"\n11) "bob"\n12) "12000"'}, {'http://doc.redisfans.com/sorted_set/zunionstore.html'}], 'ZINTERSTORE': [{'redis > ZADD mid_test 70 "Li Lei"\n(integer) 1\nredis > ZADD mid_test 70 "Han Meimei"\n(integer) 1\nredis > ZADD mid_test 99.5 "Tom"\n(integer) 1\n\nredis > ZADD fin_test 88 "Li Lei"\n(integer) 1\nredis > ZADD fin_test 75 "Han Meimei"\n(integer) 1\nredis > ZADD fin_test 99.5 "Tom"\n(integer) 1\n\nredis > ZINTERSTORE sum_point 2 mid_test fin_test\n(integer) 3\n\nredis > ZRANGE sum_point 0 -1 WITHSCORES     # 显示有序集内所有成员及其 score 值\n1) "Han Meimei"\n2) "145"\n3) "Li Lei"\n4) "158"\n5) "Tom"\n6) "199"'}, {'http://doc.redisfans.com/sorted_set/zinterstore.html'}]}