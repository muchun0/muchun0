{'DEL': [{'#  删除单个 key\n\nredis> SET name huangz\nOK\n\nredis> DEL name\n(integer) 1\n\n\n# 删除一个不存在的 key\n\nredis> EXISTS phone\n(integer) 0\n\nredis> DEL phone # 失败，没有 key 被删除\n(integer) 0\n\n\n# 同时删除多个 key\n\nredis> SET name "redis"\nOK\n\nredis> SET type "key-value store"\nOK\n\nredis> SET website "redis.com"\nOK\n\nredis> DEL name type website\n(integer) 3'}, {'http://doc.redisfans.com/key/del.html'}], 'DUMP': [{'redis> SET greeting "hello, dumping world!"\nOK\n\nredis> DUMP greeting\n"\\x00\\x15hello, dumping world!\\x06\\x00E\\xa0Z\\x82\\xd8r\\xc1\\xde"\n\nredis> DUMP not-exists-key\n(nil)'}, {'http://doc.redisfans.com/key/dump.html'}], 'EXISTS': [{'redis> SET db "redis"\nOK\n\nredis> EXISTS db\n(integer) 1\n\nredis> DEL db\n(integer) 1\n\nredis> EXISTS db\n(integer) 0'}, {'http://doc.redisfans.com/key/exists.html'}], 'EXPIRE': [{'redis> SET cache_page "www.google.com"\nOK\n\nredis> EXPIRE cache_page 30  # 设置过期时间为 30 秒\n(integer) 1\n\nredis> TTL cache_page    # 查看剩余生存时间\n(integer) 23\n\nredis> EXPIRE cache_page 30000   # 更新过期时间\n(integer) 1\n\nredis> TTL cache_page\n(integer) 29996'}, {'http://doc.redisfans.com/key/expire.html'}], 'EXPIREAT': [{'redis> SET cache www.google.com\nOK\n\nredis> EXPIREAT cache 1355292000     # 这个 key 将在 2012.12.12 过期\n(integer) 1\n\nredis> TTL cache\n(integer) 45081860'}, {'http://doc.redisfans.com/key/expireat.html'}], 'KEYS': [{'redis> MSET one 1 two 2 three 3 four 4  # 一次设置 4 个 key\nOK\n\nredis> KEYS *o*\n1) "four"\n2) "two"\n3) "one"\n\nredis> KEYS t??\n1) "two"\n\nredis> KEYS t[w]*\n1) "two"\n\nredis> KEYS *  # 匹配数据库内所有 key\n1) "four"\n2) "three"\n3) "two"\n4) "one"'}, {'http://doc.redisfans.com/key/keys.html'}], 'MIGRATE': [{'$ ./redis-server &\n[1] 3557\n\n...\n\n$ ./redis-server --port 7777 &\n[2] 3560\n\n...'}, {'http://doc.redisfans.com/key/migrate.html'}], 'MOVE': [{'# key 存在于当前数据库\n\nredis> SELECT 0                             # redis默认使用数据库 0，为了清晰起见，这里再显式指定一次。\nOK\n\nredis> SET song "secret base - Zone"\nOK\n\nredis> MOVE song 1                          # 将 song 移动到数据库 1\n(integer) 1\n\nredis> EXISTS song                          # song 已经被移走\n(integer) 0\n\nredis> SELECT 1                             # 使用数据库 1\nOK\n\nredis:1> EXISTS song                        # 证实 song 被移到了数据库 1 (注意命令提示符变成了"redis:1"，表明正在使用数据库 1)\n(integer) 1\n\n\n# 当 key 不存在的时候\n\nredis:1> EXISTS fake_key\n(integer) 0\n\nredis:1> MOVE fake_key 0                    # 试图从数据库 1 移动一个不存在的 key 到数据库 0，失败\n(integer) 0\n\nredis:1> select 0                           # 使用数据库0\nOK\n\nredis> EXISTS fake_key                      # 证实 fake_key 不存在\n(integer) 0\n\n\n# 当源数据库和目标数据库有相同的 key 时\n\nredis> SELECT 0                             # 使用数据库0\nOK\nredis> SET favorite_fruit "banana"\nOK\n\nredis> SELECT 1                             # 使用数据库1\nOK\nredis:1> SET favorite_fruit "apple"\nOK\n\nredis:1> SELECT 0                           # 使用数据库0，并试图将 favorite_fruit 移动到数据库 1\nOK\n\nredis> MOVE favorite_fruit 1                # 因为两个数据库有相同的 key，MOVE 失败\n(integer) 0\n\nredis> GET favorite_fruit                   # 数据库 0 的 favorite_fruit 没变\n"banana"\n\nredis> SELECT 1\nOK\n\nredis:1> GET favorite_fruit                 # 数据库 1 的 favorite_fruit 也是\n"apple"'}, {'http://doc.redisfans.com/key/move.html'}], 'OBJECT': [{'redis> SET game "COD"           # 设置一个字符串\nOK\n\nredis> OBJECT REFCOUNT game     # 只有一个引用\n(integer) 1\n\nredis> OBJECT IDLETIME game     # 等待一阵。。。然后查看空转时间\n(integer) 90\n\nredis> GET game                 # 提取game， 让它处于活跃(active)状态\n"COD"\n\nredis> OBJECT IDLETIME game     # 不再处于空转\n(integer) 0\n\nredis> OBJECT ENCODING game     # 字符串的编码方式\n"raw"\n\nredis> SET phone 15820123123    # 大的数字也被编码为字符串\nOK\n\nredis> OBJECT ENCODING phone\n"raw"\n\nredis> SET age 20               # 短数字被编码为 int\nOK\n\nredis> OBJECT ENCODING age\n"int"'}, {'http://doc.redisfans.com/key/object.html'}], 'PERSIST': [{'redis> SET mykey "Hello"\nOK\n\nredis> EXPIRE mykey 10  # 为 key 设置生存时间\n(integer) 1\n\nredis> TTL mykey\n(integer) 10\n\nredis> PERSIST mykey    # 移除 key 的生存时间\n(integer) 1\n\nredis> TTL mykey\n(integer) -1'}, {'http://doc.redisfans.com/key/persist.html'}], 'PEXPIRE': [{'redis> SET mykey "Hello"\nOK\n\nredis> PEXPIRE mykey 1500\n(integer) 1\n\nredis> TTL mykey    # TTL 的返回值以秒为单位\n(integer) 2\n\nredis> PTTL mykey   # PTTL 可以给出准确的毫秒数\n(integer) 1499'}, {'http://doc.redisfans.com/key/pexpire.html'}], 'PEXPIREAT': [{'redis> SET mykey "Hello"\nOK\n\nredis> PEXPIREAT mykey 1555555555005\n(integer) 1\n\nredis> TTL mykey           # TTL 返回秒\n(integer) 223157079\n\nredis> PTTL mykey          # PTTL 返回毫秒\n(integer) 223157079318'}, {'http://doc.redisfans.com/key/pexpireat.html'}], 'PTTL': [{'# 不存在的 key\n\nredis> FLUSHDB\nOK\n\nredis> PTTL key\n(integer) -2\n\n\n# key 存在，但没有设置剩余生存时间\n\nredis> SET key value\nOK\n\nredis> PTTL key\n(integer) -1\n\n\n# 有剩余生存时间的 key\n\nredis> PEXPIRE key 10086\n(integer) 1\n\nredis> PTTL key\n(integer) 6179'}, {'http://doc.redisfans.com/key/pttl.html'}], 'RANDOMKEY': [{'# 数据库不为空\n\nredis> MSET fruit "apple" drink "beer" food "cookies"   # 设置多个 key\nOK\n\nredis> RANDOMKEY\n"fruit"\n\nredis> RANDOMKEY\n"food"\n\nredis> KEYS *    # 查看数据库内所有key，证明 RANDOMKEY 并不删除 key\n1) "food"\n2) "drink"\n3) "fruit"\n\n\n# 数据库为空\n\nredis> FLUSHDB  # 删除当前数据库所有 key\nOK\n\nredis> RANDOMKEY\n(nil)'}, {'http://doc.redisfans.com/key/randomkey.html'}], 'RENAME': [{'# key 存在且 newkey 不存在\n\nredis> SET message "hello world"\nOK\n\nredis> RENAME message greeting\nOK\n\nredis> EXISTS message               # message 不复存在\n(integer) 0\n\nredis> EXISTS greeting              # greeting 取而代之\n(integer) 1\n\n\n# 当 key 不存在时，返回错误\n\nredis> RENAME fake_key never_exists\n(error) ERR no such key\n\n\n# newkey 已存在时， RENAME 会覆盖旧 newkey\n\nredis> SET pc "lenovo"\nOK\n\nredis> SET personal_computer "dell"\nOK\n\nredis> RENAME pc personal_computer\nOK\n\nredis> GET pc\n(nil)\n\nredis:1> GET personal_computer      # 原来的值 dell 被覆盖了\n"lenovo"'}, {'http://doc.redisfans.com/key/rename.html'}], 'RENAMENX': [{'# newkey 不存在，改名成功\n\nredis> SET player "MPlyaer"\nOK\n\nredis> EXISTS best_player\n(integer) 0\n\nredis> RENAMENX player best_player\n(integer) 1\n\n\n# newkey存在时，失败\n\nredis> SET animal "bear"\nOK\n\nredis> SET favorite_animal "butterfly"\nOK\n\nredis> RENAMENX animal favorite_animal\n(integer) 0\n\nredis> get animal\n"bear"\n\nredis> get favorite_animal\n"butterfly"'}, {'http://doc.redisfans.com/key/renamenx.html'}], 'RESTORE': [{'redis> SET greeting "hello, dumping world!"\nOK\n\nredis> DUMP greeting\n"\\x00\\x15hello, dumping world!\\x06\\x00E\\xa0Z\\x82\\xd8r\\xc1\\xde"\n\nredis> RESTORE greeting-again 0 "\\x00\\x15hello, dumping world!\\x06\\x00E\\xa0Z\\x82\\xd8r\\xc1\\xde"\nOK\n\nredis> GET greeting-again\n"hello, dumping world!"\n\nredis> RESTORE fake-message 0 "hello moto moto blah blah"   ; 使用错误的值进行反序列化\n(error) ERR DUMP payload version or checksum are wrong'}, {'http://doc.redisfans.com/key/restore.html'}], 'SORT': [{'# 开销金额列表\n\nredis> LPUSH today_cost 30 1.5 10 8\n(integer) 4\n\n# 排序\n\nredis> SORT today_cost\n1) "1.5"\n2) "8"\n3) "10"\n4) "30"\n\n# 逆序排序\n\nredis 127.0.0.1:6379> SORT today_cost DESC\n1) "30"\n2) "10"\n3) "8"\n4) "1.5"'}, {'http://doc.redisfans.com/key/sort.html'}], 'TTL': [{'# 不存在的 key\n\nredis> FLUSHDB\nOK\n\nredis> TTL key\n(integer) -2\n\n\n# key 存在，但没有设置剩余生存时间\n\nredis> SET key value\nOK\n\nredis> TTL key\n(integer) -1\n\n\n# 有剩余生存时间的 key\n\nredis> EXPIRE key 10086\n(integer) 1\n\nredis> TTL key\n(integer) 10084'}, {'http://doc.redisfans.com/key/ttl.html'}], 'TYPE': [{'# 字符串\n\nredis> SET weather "sunny"\nOK\n\nredis> TYPE weather\nstring\n\n\n# 列表\n\nredis> LPUSH book_list "programming in scala"\n(integer) 1\n\nredis> TYPE book_list\nlist\n\n\n# 集合\n\nredis> SADD pat "dog"\n(integer) 1\n\nredis> TYPE pat\nset'}, {'http://doc.redisfans.com/key/type.html'}], 'SCAN': [{'redis 127.0.0.1:6379> scan 0\n1) "17"\n2)  1) "key:12"\n    2) "key:8"\n    3) "key:4"\n    4) "key:14"\n    5) "key:16"\n    6) "key:17"\n    7) "key:15"\n    8) "key:10"\n    9) "key:3"\n    10) "key:7"\n    11) "key:1"\n\nredis 127.0.0.1:6379> scan 17\n1) "0"\n2) 1) "key:5"\n   2) "key:18"\n   3) "key:0"\n   4) "key:2"\n   5) "key:19"\n   6) "key:13"\n   7) "key:6"\n   8) "key:9"\n   9) "key:11"'}, {'http://doc.redisfans.com/key/scan.html'}]}