{'BLPOP': [{'redis> DEL job command request           # 确保key都被删除\n(integer) 0\n\nredis> LPUSH command "update system..."  # 为command列表增加一个值\n(integer) 1\n\nredis> LPUSH request "visit page"        # 为request列表增加一个值\n(integer) 1\n\nredis> BLPOP job command request 0       # job 列表为空，被跳过，紧接着 command 列表的第一个元素被弹出。\n1) "command"                             # 弹出元素所属的列表\n2) "update system..."                    # 弹出元素所属的值'}, {'http://doc.redisfans.com/list/blpop.html'}], 'BRPOP': [{'redis> LLEN course\n(integer) 0\n\nredis> RPUSH course algorithm001\n(integer) 1\n\nredis> RPUSH course c++101\n(integer) 2\n\nredis> BRPOP course 30\n1) "course"             # 弹出元素的 key\n2) "c++101"             # 弹出元素的值'}, {'http://doc.redisfans.com/list/brpop.html'}], 'BRPOPLPUSH': [{'# 非空列表\n\nredis> BRPOPLPUSH msg reciver 500\n"hello moto"                        # 弹出元素的值\n(3.38s)                             # 等待时长\n\nredis> LLEN reciver\n(integer) 1\n\nredis> LRANGE reciver 0 0\n1) "hello moto"\n\n\n# 空列表\n\nredis> BRPOPLPUSH msg reciver 1\n(nil)\n(1.34s)'}, {'http://doc.redisfans.com/list/brpoplpush.html'}], 'LINDEX': [{'redis> LPUSH mylist "World"\n(integer) 1\n\nredis> LPUSH mylist "Hello"\n(integer) 2\n\nredis> LINDEX mylist 0\n"Hello"\n\nredis> LINDEX mylist -1\n"World"\n\nredis> LINDEX mylist 3        # index不在 mylist 的区间范围内\n(nil)'}, {'http://doc.redisfans.com/list/lindex.html'}], 'LINSERT': [{'redis> RPUSH mylist "Hello"\n(integer) 1\n\nredis> RPUSH mylist "World"\n(integer) 2\n\nredis> LINSERT mylist BEFORE "World" "There"\n(integer) 3\n\nredis> LRANGE mylist 0 -1\n1) "Hello"\n2) "There"\n3) "World"\n\n\n# 对一个非空列表插入，查找一个不存在的 pivot\n\nredis> LINSERT mylist BEFORE "go" "let\'s"\n(integer) -1                                    # 失败\n\n\n# 对一个空列表执行 LINSERT 命令\n\nredis> EXISTS fake_list\n(integer) 0\n\nredis> LINSERT fake_list BEFORE "nono" "gogogog"\n(integer) 0                                      # 失败'}, {'http://doc.redisfans.com/list/linsert.html'}], 'LLEN': [{'# 空列表\n\nredis> LLEN job\n(integer) 0\n\n\n# 非空列表\n\nredis> LPUSH job "cook food"\n(integer) 1\n\nredis> LPUSH job "have lunch"\n(integer) 2\n\nredis> LLEN job\n(integer) 2'}, {'http://doc.redisfans.com/list/llen.html'}], 'LPOP': [{'redis> LLEN course\n(integer) 0\n\nredis> RPUSH course algorithm001\n(integer) 1\n\nredis> RPUSH course c++101\n(integer) 2\n\nredis> LPOP course  # 移除头元素\n"algorithm001"'}, {'http://doc.redisfans.com/list/lpop.html'}], 'LPUSH': [{'# 加入单个元素\n\nredis> LPUSH languages python\n(integer) 1\n\n\n# 加入重复元素\n\nredis> LPUSH languages python\n(integer) 2\n\nredis> LRANGE languages 0 -1     # 列表允许重复元素\n1) "python"\n2) "python"\n\n\n# 加入多个元素\n\nredis> LPUSH mylist a b c\n(integer) 3\n\nredis> LRANGE mylist 0 -1\n1) "c"\n2) "b"\n3) "a"'}, {'http://doc.redisfans.com/list/lpush.html'}], 'LPUSHX': [{'# 对空列表执行 LPUSHX\n\nredis> LLEN greet                       # greet 是一个空列表\n(integer) 0\n\nredis> LPUSHX greet "hello"             # 尝试 LPUSHX，失败，因为列表为空\n(integer) 0\n\n\n# 对非空列表执行 LPUSHX\n\nredis> LPUSH greet "hello"              # 先用 LPUSH 创建一个有一个元素的列表\n(integer) 1\n\nredis> LPUSHX greet "good morning"      # 这次 LPUSHX 执行成功\n(integer) 2\n\nredis> LRANGE greet 0 -1\n1) "good morning"\n2) "hello"'}, {'http://doc.redisfans.com/list/lpushx.html'}], 'LRANGE': [{'redis> RPUSH fp-language lisp\n(integer) 1\n\nredis> LRANGE fp-language 0 0\n1) "lisp"\n\nredis> RPUSH fp-language scheme\n(integer) 2\n\nredis> LRANGE fp-language 0 1\n1) "lisp"\n2) "scheme"'}, {'http://doc.redisfans.com/list/lrange.html'}], 'LREM': [{'# 先创建一个表，内容排列是\n# morning hello morning helllo morning\n\nredis> LPUSH greet "morning"\n(integer) 1\nredis> LPUSH greet "hello"\n(integer) 2\nredis> LPUSH greet "morning"\n(integer) 3\nredis> LPUSH greet "hello"\n(integer) 4\nredis> LPUSH greet "morning"\n(integer) 5\n\nredis> LRANGE greet 0 4         # 查看所有元素\n1) "morning"\n2) "hello"\n3) "morning"\n4) "hello"\n5) "morning"\n\nredis> LREM greet 2 morning     # 移除从表头到表尾，最先发现的两个 morning\n(integer) 2                     # 两个元素被移除\n\nredis> LLEN greet               # 还剩 3 个元素\n(integer) 3\n\nredis> LRANGE greet 0 2\n1) "hello"\n2) "hello"\n3) "morning"\n\nredis> LREM greet -1 morning    # 移除从表尾到表头，第一个 morning\n(integer) 1\n\nredis> LLEN greet               # 剩下两个元素\n(integer) 2\n\nredis> LRANGE greet 0 1\n1) "hello"\n2) "hello"\n\nredis> LREM greet 0 hello      # 移除表中所有 hello\n(integer) 2                    # 两个 hello 被移除\n\nredis> LLEN greet\n(integer) 0'}, {'http://doc.redisfans.com/list/lrem.html'}], 'LSET': [{'# 对空列表(key 不存在)进行 LSET\n\nredis> EXISTS list\n(integer) 0\n\nredis> LSET list 0 item\n(error) ERR no such key\n\n\n# 对非空列表进行 LSET\n\nredis> LPUSH job "cook food"\n(integer) 1\n\nredis> LRANGE job 0 0\n1) "cook food"\n\nredis> LSET job 0 "play game"\nOK\n\nredis> LRANGE job  0 0\n1) "play game"\n\n\n# index 超出范围\n\nredis> LLEN list                    # 列表长度为 1\n(integer) 1\n\nredis> LSET list 3 \'out of range\'\n(error) ERR index out of range'}, {'http://doc.redisfans.com/list/lset.html'}], 'LTRIM': [{'LPUSH log newest_log\nLTRIM log 0 99'}, {'http://doc.redisfans.com/list/ltrim.html'}], 'RPOP': [{'redis> RPUSH mylist "one"\n(integer) 1\n\nredis> RPUSH mylist "two"\n(integer) 2\n\nredis> RPUSH mylist "three"\n(integer) 3\n\nredis> RPOP mylist           # 返回被弹出的元素\n"three"\n\nredis> LRANGE mylist 0 -1    # 列表剩下的元素\n1) "one"\n2) "two"'}, {'http://doc.redisfans.com/list/rpop.html'}], 'RPOPLPUSH': [{'# source 和 destination 不同\n\nredis> LRANGE alpha 0 -1         # 查看所有元素\n1) "a"\n2) "b"\n3) "c"\n4) "d"\n\nredis> RPOPLPUSH alpha reciver   # 执行一次 RPOPLPUSH 看看\n"d"\n\nredis> LRANGE alpha 0 -1\n1) "a"\n2) "b"\n3) "c"\n\nredis> LRANGE reciver 0 -1\n1) "d"\n\nredis> RPOPLPUSH alpha reciver   # 再执行一次，证实 RPOP 和 LPUSH 的位置正确\n"c"\n\nredis> LRANGE alpha 0 -1\n1) "a"\n2) "b"\n\nredis> LRANGE reciver 0 -1\n1) "c"\n2) "d"\n\n\n# source 和 destination 相同\n\nredis> LRANGE number 0 -1\n1) "1"\n2) "2"\n3) "3"\n4) "4"\n\nredis> RPOPLPUSH number number\n"4"\n\nredis> LRANGE number 0 -1           # 4 被旋转到了表头\n1) "4"\n2) "1"\n3) "2"\n4) "3"\n\nredis> RPOPLPUSH number number\n"3"\n\nredis> LRANGE number 0 -1           # 这次是 3 被旋转到了表头\n1) "3"\n2) "4"\n3) "1"\n4) "2"'}, {'http://doc.redisfans.com/list/rpoplpush.html'}], 'RPUSH': [{'# 添加单个元素\n\nredis> RPUSH languages c\n(integer) 1\n\n\n# 添加重复元素\n\nredis> RPUSH languages c\n(integer) 2\n\nredis> LRANGE languages 0 -1 # 列表允许重复元素\n1) "c"\n2) "c"\n\n\n# 添加多个元素\n\nredis> RPUSH mylist a b c\n(integer) 3\n\nredis> LRANGE mylist 0 -1\n1) "a"\n2) "b"\n3) "c"'}, {'http://doc.redisfans.com/list/rpush.html'}], 'RPUSHX': [{'# key不存在\n\nredis> LLEN greet\n(integer) 0\n\nredis> RPUSHX greet "hello"     # 对不存在的 key 进行 RPUSHX，PUSH 失败。\n(integer) 0\n\n\n# key 存在且是一个非空列表\n\nredis> RPUSH greet "hi"         # 先用 RPUSH 插入一个元素\n(integer) 1\n\nredis> RPUSHX greet "hello"     # greet 现在是一个列表类型，RPUSHX 操作成功。\n(integer) 2\n\nredis> LRANGE greet 0 -1\n1) "hi"\n2) "hello"'}, {'http://doc.redisfans.com/list/rpushx.html'}]}